// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ModelTransformer:  should override  model objects when given override config 1`] = `
Object {
  "Conditions": Object {
    "HasEnvironmentParameter": Object {
      "Fn::Not": Array [
        Object {
          "Fn::Equals": Array [
            Object {
              "Ref": "referencetotransformerrootstackenv10C5A902Ref",
            },
            "NONE",
          ],
        },
      ],
    },
    "ShouldUsePayPerRequestBilling": Object {
      "Fn::Equals": Array [
        Object {
          "Ref": "DynamoDBBillingMode",
        },
        "PAY_PER_REQUEST",
      ],
    },
    "ShouldUsePointInTimeRecovery": Object {
      "Fn::Equals": Array [
        Object {
          "Ref": "DynamoDBEnablePointInTimeRecovery",
        },
        "true",
      ],
    },
    "ShouldUseServerSideEncryption": Object {
      "Fn::Equals": Array [
        Object {
          "Ref": "DynamoDBEnableServerSideEncryption",
        },
        "true",
      ],
    },
  },
  "Outputs": Object {
    "GetAttPostDataSourceName": Object {
      "Description": "Your model DataSource name.",
      "Export": Object {
        "Name": Object {
          "Fn::Join": Array [
            ":",
            Array [
              Object {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
              },
              "GetAtt:PostDataSource:Name",
            ],
          ],
        },
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "PostDataSource",
          "Name",
        ],
      },
    },
    "GetAttPostTableName": Object {
      "Description": "Your DynamoDB table name.",
      "Export": Object {
        "Name": Object {
          "Fn::Join": Array [
            ":",
            Array [
              Object {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
              },
              "GetAtt:PostTable:Name",
            ],
          ],
        },
      },
      "Value": Object {
        "Ref": "PostTable",
      },
    },
    "GetAttPostTableStreamArn": Object {
      "Description": "Your DynamoDB table StreamArn.",
      "Export": Object {
        "Name": Object {
          "Fn::Join": Array [
            ":",
            Array [
              Object {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
              },
              "GetAtt:PostTable:StreamArn",
            ],
          ],
        },
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "PostTable",
          "StreamArn",
        ],
      },
    },
    "transformerrootstackPostMutationcreatePostinit0FunctionMutationcreatePostinit0FunctionAppSyncFunctionB82DB57BFunctionId": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "MutationcreatePostinit0FunctionMutationcreatePostinit0FunctionAppSyncFunction9E444A7F",
          "FunctionId",
        ],
      },
    },
    "transformerrootstackPostMutationupdatePostinit0FunctionMutationupdatePostinit0FunctionAppSyncFunction148F70DDFunctionId": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "MutationupdatePostinit0FunctionMutationupdatePostinit0FunctionAppSyncFunctionBAC7D532",
          "FunctionId",
        ],
      },
    },
    "transformerrootstackPostQuerygetPostpostAuth0FunctionQuerygetPostpostAuth0FunctionAppSyncFunction052A79B2FunctionId": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "QuerygetPostpostAuth0FunctionQuerygetPostpostAuth0FunctionAppSyncFunctionC72E5C0F",
          "FunctionId",
        ],
      },
    },
    "transformerrootstackPostSubscriptionOnCreatePostDataResolverFnSubscriptionOnCreatePostDataResolverFnAppSyncFunctionAE3ECF1FFunctionId": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "SubscriptionOnCreatePostDataResolverFnSubscriptionOnCreatePostDataResolverFnAppSyncFunctionB4572868",
          "FunctionId",
        ],
      },
    },
  },
  "Parameters": Object {
    "DynamoDBBillingMode": Object {
      "AllowedValues": Array [
        "PAY_PER_REQUEST",
        "PROVISIONED",
      ],
      "Default": "PAY_PER_REQUEST",
      "Description": "Configure @model types to create DynamoDB tables with PAY_PER_REQUEST or PROVISIONED billing modes.",
      "Type": "String",
    },
    "DynamoDBEnablePointInTimeRecovery": Object {
      "AllowedValues": Array [
        "true",
        "false",
      ],
      "Default": "false",
      "Description": "Whether to enable Point in Time Recovery on the table.",
      "Type": "String",
    },
    "DynamoDBEnableServerSideEncryption": Object {
      "AllowedValues": Array [
        "true",
        "false",
      ],
      "Default": "true",
      "Description": "Enable server side encryption powered by KMS.",
      "Type": "String",
    },
    "DynamoDBModelTableReadIOPS": Object {
      "Default": 5,
      "Description": "The number of read IOPS the table should support.",
      "Type": "Number",
    },
    "DynamoDBModelTableWriteIOPS": Object {
      "Default": 5,
      "Description": "The number of write IOPS the table should support.",
      "Type": "Number",
    },
    "referencetotransformerrootstackGraphQLAPI20497F53ApiId": Object {
      "Type": "String",
    },
    "referencetotransformerrootstackGraphQLAPINONEDS2BA9D1C8Name": Object {
      "Type": "String",
    },
    "referencetotransformerrootstackS3DeploymentBucket7592718ARef": Object {
      "Type": "String",
    },
    "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref": Object {
      "Type": "String",
    },
    "referencetotransformerrootstackenv10C5A902Ref": Object {
      "Type": "String",
    },
  },
  "Resources": Object {
    "CreatePostResolver": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
        },
        "Code": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/**
 * Configure stash variables which will be used downstream in the linked functions.
 */
export function request(context) {
  Object.entries({
    typeName: 'Mutation',
    fieldName: 'createPost',
    conditions: [],
    metadata: {
      dataSourceType: 'AMAZON_DYNAMODB',
      apiId: '",
              Object {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
              },
              "',
    },
    tableName: '",
              Object {
                "Ref": "PostTable",
              },
              "',
  }).forEach(([name, value]) => (context.stash[name] = value));
  return {};
}

/**
 * No-op response function.
 */
export function response(context) {
  return context.prev.result;
}
",
            ],
          ],
        },
        "FieldName": "createPost",
        "Kind": "PIPELINE",
        "PipelineConfig": Object {
          "Functions": Array [
            Object {
              "Fn::GetAtt": Array [
                "MutationcreatePostinit0FunctionMutationcreatePostinit0FunctionAppSyncFunction9E444A7F",
                "FunctionId",
              ],
            },
            Object {
              "Fn::GetAtt": Array [
                "QuerygetPostpostAuth0FunctionQuerygetPostpostAuth0FunctionAppSyncFunctionC72E5C0F",
                "FunctionId",
              ],
            },
            Object {
              "Fn::GetAtt": Array [
                "MutationCreatePostDataResolverFnMutationCreatePostDataResolverFnAppSyncFunctionE45E2000",
                "FunctionId",
              ],
            },
          ],
        },
        "Runtime": Object {
          "Name": "APPSYNC_JS",
          "RuntimeVersion": "1.0.0",
        },
        "TypeName": "Mutation",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "DeletePostResolver": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
        },
        "Code": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/**
 * Configure stash variables which will be used downstream in the linked functions.
 */
export function request(context) {
  Object.entries({
    typeName: 'Mutation',
    fieldName: 'deletePost',
    conditions: [],
    metadata: {
      dataSourceType: 'AMAZON_DYNAMODB',
      apiId: '",
              Object {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
              },
              "',
    },
    tableName: '",
              Object {
                "Ref": "PostTable",
              },
              "',
  }).forEach(([name, value]) => (context.stash[name] = value));
  return {};
}

/**
 * No-op response function.
 */
export function response(context) {
  return context.prev.result;
}
",
            ],
          ],
        },
        "FieldName": "deletePost",
        "Kind": "PIPELINE",
        "PipelineConfig": Object {
          "Functions": Array [
            Object {
              "Fn::GetAtt": Array [
                "QuerygetPostpostAuth0FunctionQuerygetPostpostAuth0FunctionAppSyncFunctionC72E5C0F",
                "FunctionId",
              ],
            },
            Object {
              "Fn::GetAtt": Array [
                "MutationDeletePostDataResolverFnMutationDeletePostDataResolverFnAppSyncFunction45B37C12",
                "FunctionId",
              ],
            },
          ],
        },
        "Runtime": Object {
          "Name": "APPSYNC_JS",
          "RuntimeVersion": "1.0.0",
        },
        "TypeName": "Mutation",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "DynamoDBAccess71ABE5AE": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:DeleteItem",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:Query",
                "dynamodb:UpdateItem",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Sub": Array [
                    "arn:aws:dynamodb:\${AWS::Region}:\${AWS::AccountId}:table/\${tablename}",
                    Object {
                      "tablename": Object {
                        "Fn::Join": Array [
                          "",
                          Array [
                            "Post-",
                            Object {
                              "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
                            },
                            "-",
                            Object {
                              "Ref": "referencetotransformerrootstackenv10C5A902Ref",
                            },
                          ],
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "Fn::Sub": Array [
                    "arn:aws:dynamodb:\${AWS::Region}:\${AWS::AccountId}:table/\${tablename}/*",
                    Object {
                      "tablename": Object {
                        "Fn::Join": Array [
                          "",
                          Array [
                            "Post-",
                            Object {
                              "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
                            },
                            "-",
                            Object {
                              "Ref": "referencetotransformerrootstackenv10C5A902Ref",
                            },
                          ],
                        ],
                      },
                    },
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DynamoDBAccess71ABE5AE",
        "Roles": Array [
          Object {
            "Ref": "PostIAMRole83BF708F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GetPostResolver": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
        },
        "Code": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/**
 * Configure stash variables which will be used downstream in the linked functions.
 */
export function request(context) {
  Object.entries({
    typeName: 'Query',
    fieldName: 'getPost',
    conditions: [],
    metadata: {
      dataSourceType: 'AMAZON_DYNAMODB',
      apiId: '",
              Object {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
              },
              "',
    },
    tableName: '",
              Object {
                "Ref": "PostTable",
              },
              "',
  }).forEach(([name, value]) => (context.stash[name] = value));
  return {};
}

/**
 * No-op response function.
 */
export function response(context) {
  return context.prev.result;
}
",
            ],
          ],
        },
        "FieldName": "getPost",
        "Kind": "PIPELINE",
        "PipelineConfig": Object {
          "Functions": Array [
            Object {
              "Fn::GetAtt": Array [
                "QuerygetPostpostAuth0FunctionQuerygetPostpostAuth0FunctionAppSyncFunctionC72E5C0F",
                "FunctionId",
              ],
            },
            Object {
              "Fn::GetAtt": Array [
                "QueryGetPostDataResolverFnQueryGetPostDataResolverFnAppSyncFunction06724190",
                "FunctionId",
              ],
            },
          ],
        },
        "Runtime": Object {
          "Name": "APPSYNC_JS",
          "RuntimeVersion": "1.0.0",
        },
        "TypeName": "Query",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "ListPostResolver": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
        },
        "Code": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/**
 * Configure stash variables which will be used downstream in the linked functions.
 */
export function request(context) {
  Object.entries({
    typeName: 'Query',
    fieldName: 'listPosts',
    conditions: [],
    metadata: {
      dataSourceType: 'AMAZON_DYNAMODB',
      apiId: '",
              Object {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
              },
              "',
    },
    tableName: '",
              Object {
                "Ref": "PostTable",
              },
              "',
  }).forEach(([name, value]) => (context.stash[name] = value));
  return {};
}

/**
 * No-op response function.
 */
export function response(context) {
  return context.prev.result;
}
",
            ],
          ],
        },
        "FieldName": "listPosts",
        "Kind": "PIPELINE",
        "PipelineConfig": Object {
          "Functions": Array [
            Object {
              "Fn::GetAtt": Array [
                "QuerygetPostpostAuth0FunctionQuerygetPostpostAuth0FunctionAppSyncFunctionC72E5C0F",
                "FunctionId",
              ],
            },
            Object {
              "Fn::GetAtt": Array [
                "QueryListPostsDataResolverFnQueryListPostsDataResolverFnAppSyncFunction3D526AB7",
                "FunctionId",
              ],
            },
          ],
        },
        "Runtime": Object {
          "Name": "APPSYNC_JS",
          "RuntimeVersion": "1.0.0",
        },
        "TypeName": "Query",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "MutationCreatePostDataResolverFnMutationCreatePostDataResolverFnAppSyncFunctionE45E2000": Object {
      "DependsOn": Array [
        "PostDataSource",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
        },
        "DataSourceName": Object {
          "Fn::GetAtt": Array [
            "PostDataSource",
            "Name",
          ],
        },
        "FunctionVersion": "2018-05-29",
        "Name": "MutationCreatePostDataResolverFn",
        "RequestMappingTemplateS3Location": Object {
          "Fn::Join": Array [
            "",
            Array [
              "s3://",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef",
              },
              "/",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref",
              },
              "/resolvers/Mutation.createPost.req.vtl",
            ],
          ],
        },
        "ResponseMappingTemplateS3Location": Object {
          "Fn::Join": Array [
            "",
            Array [
              "s3://",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef",
              },
              "/",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref",
              },
              "/resolvers/Mutation.createPost.res.vtl",
            ],
          ],
        },
      },
      "Type": "AWS::AppSync::FunctionConfiguration",
    },
    "MutationDeletePostDataResolverFnMutationDeletePostDataResolverFnAppSyncFunction45B37C12": Object {
      "DependsOn": Array [
        "PostDataSource",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
        },
        "DataSourceName": Object {
          "Fn::GetAtt": Array [
            "PostDataSource",
            "Name",
          ],
        },
        "FunctionVersion": "2018-05-29",
        "Name": "MutationDeletePostDataResolverFn",
        "RequestMappingTemplateS3Location": Object {
          "Fn::Join": Array [
            "",
            Array [
              "s3://",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef",
              },
              "/",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref",
              },
              "/resolvers/Mutation.deletePost.req.vtl",
            ],
          ],
        },
        "ResponseMappingTemplateS3Location": Object {
          "Fn::Join": Array [
            "",
            Array [
              "s3://",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef",
              },
              "/",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref",
              },
              "/resolvers/Mutation.deletePost.res.vtl",
            ],
          ],
        },
      },
      "Type": "AWS::AppSync::FunctionConfiguration",
    },
    "MutationUpdatePostDataResolverFnMutationUpdatePostDataResolverFnAppSyncFunctionBF7D410D": Object {
      "DependsOn": Array [
        "PostDataSource",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
        },
        "DataSourceName": Object {
          "Fn::GetAtt": Array [
            "PostDataSource",
            "Name",
          ],
        },
        "FunctionVersion": "2018-05-29",
        "Name": "MutationUpdatePostDataResolverFn",
        "RequestMappingTemplateS3Location": Object {
          "Fn::Join": Array [
            "",
            Array [
              "s3://",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef",
              },
              "/",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref",
              },
              "/resolvers/Mutation.updatePost.req.vtl",
            ],
          ],
        },
        "ResponseMappingTemplateS3Location": Object {
          "Fn::Join": Array [
            "",
            Array [
              "s3://",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef",
              },
              "/",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref",
              },
              "/resolvers/Mutation.updatePost.res.vtl",
            ],
          ],
        },
      },
      "Type": "AWS::AppSync::FunctionConfiguration",
    },
    "MutationcreatePostinit0FunctionMutationcreatePostinit0FunctionAppSyncFunction9E444A7F": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
        },
        "DataSourceName": Object {
          "Ref": "referencetotransformerrootstackGraphQLAPINONEDS2BA9D1C8Name",
        },
        "FunctionVersion": "2018-05-29",
        "Name": "MutationcreatePostinit0Function",
        "RequestMappingTemplateS3Location": Object {
          "Fn::Join": Array [
            "",
            Array [
              "s3://",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef",
              },
              "/",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref",
              },
              "/resolvers/Mutation.createPost.init.1.req.vtl",
            ],
          ],
        },
        "ResponseMappingTemplate": "$util.toJson({})",
      },
      "Type": "AWS::AppSync::FunctionConfiguration",
    },
    "MutationupdatePostinit0FunctionMutationupdatePostinit0FunctionAppSyncFunctionBAC7D532": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
        },
        "DataSourceName": Object {
          "Ref": "referencetotransformerrootstackGraphQLAPINONEDS2BA9D1C8Name",
        },
        "FunctionVersion": "2018-05-29",
        "Name": "MutationupdatePostinit0Function",
        "RequestMappingTemplateS3Location": Object {
          "Fn::Join": Array [
            "",
            Array [
              "s3://",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef",
              },
              "/",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref",
              },
              "/resolvers/Mutation.updatePost.init.1.req.vtl",
            ],
          ],
        },
        "ResponseMappingTemplate": "$util.toJson({})",
      },
      "Type": "AWS::AppSync::FunctionConfiguration",
    },
    "PostDataSource": Object {
      "DependsOn": Array [
        "PostIAMRole83BF708F",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
        },
        "DynamoDBConfig": Object {
          "AwsRegion": Object {
            "Ref": "AWS::Region",
          },
          "TableName": Object {
            "Ref": "PostTable",
          },
        },
        "Name": "PostTable",
        "ServiceRoleArn": Object {
          "Fn::GetAtt": Array [
            "PostIAMRole83BF708F",
            "Arn",
          ],
        },
        "Type": "AMAZON_DYNAMODB",
      },
      "Type": "AWS::AppSync::DataSource",
    },
    "PostIAMRole83BF708F": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "appsync.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "RoleName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "PostIAMRolebbce9b-",
              Object {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
              },
              "-",
              Object {
                "Ref": "referencetotransformerrootstackenv10C5A902Ref",
              },
            ],
          ],
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "PostIAMRoleDefaultPolicy04190CA0": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "PostTable",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "PostIAMRoleDefaultPolicy04190CA0",
        "Roles": Array [
          Object {
            "Ref": "PostIAMRole83BF708F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "PostTable": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "id",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PROVISIONED",
        "KeySchema": Array [
          Object {
            "AttributeName": "id",
            "KeyType": "HASH",
          },
        ],
        "PointInTimeRecoverySpecification": Object {
          "Fn::If": Array [
            "ShouldUsePointInTimeRecovery",
            Object {
              "PointInTimeRecoveryEnabled": true,
            },
            Object {
              "Ref": "AWS::NoValue",
            },
          ],
        },
        "ProvisionedThroughput": Object {
          "Fn::If": Array [
            "ShouldUsePayPerRequestBilling",
            Object {
              "Ref": "AWS::NoValue",
            },
            Object {
              "ReadCapacityUnits": Object {
                "Ref": "DynamoDBModelTableReadIOPS",
              },
              "WriteCapacityUnits": Object {
                "Ref": "DynamoDBModelTableWriteIOPS",
              },
            },
          ],
        },
        "SSESpecification": Object {
          "SSEEnabled": Object {
            "Fn::If": Array [
              "ShouldUseServerSideEncryption",
              true,
              false,
            ],
          },
        },
        "StreamSpecification": Object {
          "StreamViewType": "NEW_AND_OLD_IMAGES",
        },
        "TableName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Post-",
              Object {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
              },
              "-",
              Object {
                "Ref": "referencetotransformerrootstackenv10C5A902Ref",
              },
            ],
          ],
        },
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
    "QueryGetPostDataResolverFnQueryGetPostDataResolverFnAppSyncFunction06724190": Object {
      "DependsOn": Array [
        "PostDataSource",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
        },
        "DataSourceName": Object {
          "Fn::GetAtt": Array [
            "PostDataSource",
            "Name",
          ],
        },
        "FunctionVersion": "2018-05-29",
        "Name": "QueryGetPostDataResolverFn",
        "RequestMappingTemplateS3Location": Object {
          "Fn::Join": Array [
            "",
            Array [
              "s3://",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef",
              },
              "/",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref",
              },
              "/resolvers/Query.getPost.req.vtl",
            ],
          ],
        },
        "ResponseMappingTemplateS3Location": Object {
          "Fn::Join": Array [
            "",
            Array [
              "s3://",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef",
              },
              "/",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref",
              },
              "/resolvers/Query.getPost.res.vtl",
            ],
          ],
        },
      },
      "Type": "AWS::AppSync::FunctionConfiguration",
    },
    "QueryListPostsDataResolverFnQueryListPostsDataResolverFnAppSyncFunction3D526AB7": Object {
      "DependsOn": Array [
        "PostDataSource",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
        },
        "DataSourceName": Object {
          "Fn::GetAtt": Array [
            "PostDataSource",
            "Name",
          ],
        },
        "FunctionVersion": "2018-05-29",
        "Name": "QueryListPostsDataResolverFn",
        "RequestMappingTemplateS3Location": Object {
          "Fn::Join": Array [
            "",
            Array [
              "s3://",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef",
              },
              "/",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref",
              },
              "/resolvers/Query.listPosts.req.vtl",
            ],
          ],
        },
        "ResponseMappingTemplateS3Location": Object {
          "Fn::Join": Array [
            "",
            Array [
              "s3://",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef",
              },
              "/",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref",
              },
              "/resolvers/Query.listPosts.res.vtl",
            ],
          ],
        },
      },
      "Type": "AWS::AppSync::FunctionConfiguration",
    },
    "QuerygetPostpostAuth0FunctionQuerygetPostpostAuth0FunctionAppSyncFunctionC72E5C0F": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
        },
        "DataSourceName": Object {
          "Ref": "referencetotransformerrootstackGraphQLAPINONEDS2BA9D1C8Name",
        },
        "FunctionVersion": "2018-05-29",
        "Name": "QuerygetPostpostAuth0Function",
        "RequestMappingTemplateS3Location": Object {
          "Fn::Join": Array [
            "",
            Array [
              "s3://",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef",
              },
              "/",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref",
              },
              "/resolvers/Query.getPost.postAuth.1.req.vtl",
            ],
          ],
        },
        "ResponseMappingTemplate": "$util.toJson({})",
      },
      "Type": "AWS::AppSync::FunctionConfiguration",
    },
    "SubscriptionOnCreatePostDataResolverFnSubscriptionOnCreatePostDataResolverFnAppSyncFunctionB4572868": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
        },
        "DataSourceName": Object {
          "Ref": "referencetotransformerrootstackGraphQLAPINONEDS2BA9D1C8Name",
        },
        "FunctionVersion": "2018-05-29",
        "Name": "SubscriptionOnCreatePostDataResolverFn",
        "RequestMappingTemplateS3Location": Object {
          "Fn::Join": Array [
            "",
            Array [
              "s3://",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef",
              },
              "/",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref",
              },
              "/resolvers/Subscription.onCreatePost.req.vtl",
            ],
          ],
        },
        "ResponseMappingTemplateS3Location": Object {
          "Fn::Join": Array [
            "",
            Array [
              "s3://",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef",
              },
              "/",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref",
              },
              "/resolvers/Subscription.onCreatePost.res.vtl",
            ],
          ],
        },
      },
      "Type": "AWS::AppSync::FunctionConfiguration",
    },
    "SubscriptiononCreatePostResolver": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
        },
        "Code": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/**
 * Configure stash variables which will be used downstream in the linked functions.
 */
export function request(context) {
  Object.entries({
    typeName: 'Subscription',
    fieldName: 'onCreatePost',
    conditions: [],
    metadata: { dataSourceType: 'NONE', apiId: '",
              Object {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
              },
              "' },
  }).forEach(([name, value]) => (context.stash[name] = value));
  return {};
}

/**
 * No-op response function.
 */
export function response(context) {
  return context.prev.result;
}
",
            ],
          ],
        },
        "FieldName": "onCreatePost",
        "Kind": "PIPELINE",
        "PipelineConfig": Object {
          "Functions": Array [
            Object {
              "Fn::GetAtt": Array [
                "QuerygetPostpostAuth0FunctionQuerygetPostpostAuth0FunctionAppSyncFunctionC72E5C0F",
                "FunctionId",
              ],
            },
            Object {
              "Fn::GetAtt": Array [
                "SubscriptionOnCreatePostDataResolverFnSubscriptionOnCreatePostDataResolverFnAppSyncFunctionB4572868",
                "FunctionId",
              ],
            },
          ],
        },
        "Runtime": Object {
          "Name": "APPSYNC_JS",
          "RuntimeVersion": "1.0.0",
        },
        "TypeName": "Subscription",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "SubscriptiononDeletePostResolver": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
        },
        "Code": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/**
 * Configure stash variables which will be used downstream in the linked functions.
 */
export function request(context) {
  Object.entries({
    typeName: 'Subscription',
    fieldName: 'onDeletePost',
    conditions: [],
    metadata: { dataSourceType: 'NONE', apiId: '",
              Object {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
              },
              "' },
  }).forEach(([name, value]) => (context.stash[name] = value));
  return {};
}

/**
 * No-op response function.
 */
export function response(context) {
  return context.prev.result;
}
",
            ],
          ],
        },
        "FieldName": "onDeletePost",
        "Kind": "PIPELINE",
        "PipelineConfig": Object {
          "Functions": Array [
            Object {
              "Fn::GetAtt": Array [
                "QuerygetPostpostAuth0FunctionQuerygetPostpostAuth0FunctionAppSyncFunctionC72E5C0F",
                "FunctionId",
              ],
            },
            Object {
              "Fn::GetAtt": Array [
                "SubscriptionOnCreatePostDataResolverFnSubscriptionOnCreatePostDataResolverFnAppSyncFunctionB4572868",
                "FunctionId",
              ],
            },
          ],
        },
        "Runtime": Object {
          "Name": "APPSYNC_JS",
          "RuntimeVersion": "1.0.0",
        },
        "TypeName": "Subscription",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "SubscriptiononUpdatePostResolver": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
        },
        "Code": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/**
 * Configure stash variables which will be used downstream in the linked functions.
 */
export function request(context) {
  Object.entries({
    typeName: 'Subscription',
    fieldName: 'onUpdatePost',
    conditions: [],
    metadata: { dataSourceType: 'NONE', apiId: '",
              Object {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
              },
              "' },
  }).forEach(([name, value]) => (context.stash[name] = value));
  return {};
}

/**
 * No-op response function.
 */
export function response(context) {
  return context.prev.result;
}
",
            ],
          ],
        },
        "FieldName": "onUpdatePost",
        "Kind": "PIPELINE",
        "PipelineConfig": Object {
          "Functions": Array [
            Object {
              "Fn::GetAtt": Array [
                "QuerygetPostpostAuth0FunctionQuerygetPostpostAuth0FunctionAppSyncFunctionC72E5C0F",
                "FunctionId",
              ],
            },
            Object {
              "Fn::GetAtt": Array [
                "SubscriptionOnCreatePostDataResolverFnSubscriptionOnCreatePostDataResolverFnAppSyncFunctionB4572868",
                "FunctionId",
              ],
            },
          ],
        },
        "RequestMappingTemplate": "mockTemplate",
        "Runtime": Object {
          "Name": "APPSYNC_JS",
          "RuntimeVersion": "1.0.0",
        },
        "TypeName": "Subscription",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "UpdatePostResolver": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
        },
        "Code": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/**
 * Configure stash variables which will be used downstream in the linked functions.
 */
export function request(context) {
  Object.entries({
    typeName: 'Mutation',
    fieldName: 'updatePost',
    conditions: [],
    metadata: {
      dataSourceType: 'AMAZON_DYNAMODB',
      apiId: '",
              Object {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
              },
              "',
    },
    tableName: '",
              Object {
                "Ref": "PostTable",
              },
              "',
  }).forEach(([name, value]) => (context.stash[name] = value));
  return {};
}

/**
 * No-op response function.
 */
export function response(context) {
  return context.prev.result;
}
",
            ],
          ],
        },
        "FieldName": "updatePost",
        "Kind": "PIPELINE",
        "PipelineConfig": Object {
          "Functions": Array [
            Object {
              "Fn::GetAtt": Array [
                "MutationupdatePostinit0FunctionMutationupdatePostinit0FunctionAppSyncFunctionBAC7D532",
                "FunctionId",
              ],
            },
            Object {
              "Fn::GetAtt": Array [
                "QuerygetPostpostAuth0FunctionQuerygetPostpostAuth0FunctionAppSyncFunctionC72E5C0F",
                "FunctionId",
              ],
            },
            Object {
              "Fn::GetAtt": Array [
                "MutationUpdatePostDataResolverFnMutationUpdatePostDataResolverFnAppSyncFunctionBF7D410D",
                "FunctionId",
              ],
            },
          ],
        },
        "Runtime": Object {
          "Name": "APPSYNC_JS",
          "RuntimeVersion": "1.0.0",
        },
        "TypeName": "Mutation",
      },
      "Type": "AWS::AppSync::Resolver",
    },
  },
}
`;

exports[`ModelTransformer:  should override  model objects when given override config 2`] = `
Object {
  "Conditions": Object {
    "HasEnvironmentParameter": Object {
      "Fn::Not": Array [
        Object {
          "Fn::Equals": Array [
            Object {
              "Ref": "referencetotransformerrootstackenv10C5A902Ref",
            },
            "NONE",
          ],
        },
      ],
    },
    "ShouldUsePayPerRequestBilling": Object {
      "Fn::Equals": Array [
        Object {
          "Ref": "DynamoDBBillingMode",
        },
        "PAY_PER_REQUEST",
      ],
    },
    "ShouldUsePointInTimeRecovery": Object {
      "Fn::Equals": Array [
        Object {
          "Ref": "DynamoDBEnablePointInTimeRecovery",
        },
        "true",
      ],
    },
    "ShouldUseServerSideEncryption": Object {
      "Fn::Equals": Array [
        Object {
          "Ref": "DynamoDBEnableServerSideEncryption",
        },
        "true",
      ],
    },
  },
  "Outputs": Object {
    "GetAttCommentDataSourceName": Object {
      "Description": "Your model DataSource name.",
      "Export": Object {
        "Name": Object {
          "Fn::Join": Array [
            ":",
            Array [
              Object {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
              },
              "GetAtt:CommentDataSource:Name",
            ],
          ],
        },
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "CommentDataSource",
          "Name",
        ],
      },
    },
    "GetAttCommentTableName": Object {
      "Description": "Your DynamoDB table name.",
      "Export": Object {
        "Name": Object {
          "Fn::Join": Array [
            ":",
            Array [
              Object {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
              },
              "GetAtt:CommentTable:Name",
            ],
          ],
        },
      },
      "Value": Object {
        "Ref": "CommentTable",
      },
    },
    "GetAttCommentTableStreamArn": Object {
      "Description": "Your DynamoDB table StreamArn.",
      "Export": Object {
        "Name": Object {
          "Fn::Join": Array [
            ":",
            Array [
              Object {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
              },
              "GetAtt:CommentTable:StreamArn",
            ],
          ],
        },
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "CommentTable",
          "StreamArn",
        ],
      },
    },
  },
  "Parameters": Object {
    "DynamoDBBillingMode": Object {
      "AllowedValues": Array [
        "PAY_PER_REQUEST",
        "PROVISIONED",
      ],
      "Default": "PAY_PER_REQUEST",
      "Description": "Configure @model types to create DynamoDB tables with PAY_PER_REQUEST or PROVISIONED billing modes.",
      "Type": "String",
    },
    "DynamoDBEnablePointInTimeRecovery": Object {
      "AllowedValues": Array [
        "true",
        "false",
      ],
      "Default": "false",
      "Description": "Whether to enable Point in Time Recovery on the table.",
      "Type": "String",
    },
    "DynamoDBEnableServerSideEncryption": Object {
      "AllowedValues": Array [
        "true",
        "false",
      ],
      "Default": "true",
      "Description": "Enable server side encryption powered by KMS.",
      "Type": "String",
    },
    "DynamoDBModelTableReadIOPS": Object {
      "Default": 5,
      "Description": "The number of read IOPS the table should support.",
      "Type": "Number",
    },
    "DynamoDBModelTableWriteIOPS": Object {
      "Default": 5,
      "Description": "The number of write IOPS the table should support.",
      "Type": "Number",
    },
    "referencetotransformerrootstackGraphQLAPI20497F53ApiId": Object {
      "Type": "String",
    },
    "referencetotransformerrootstackPostNestedStackPostNestedStackResource45FCAC5EOutputstransformerrootstackPostMutationcreatePostinit0FunctionMutationcreatePostinit0FunctionAppSyncFunctionB82DB57BFunctionId": Object {
      "Type": "String",
    },
    "referencetotransformerrootstackPostNestedStackPostNestedStackResource45FCAC5EOutputstransformerrootstackPostMutationupdatePostinit0FunctionMutationupdatePostinit0FunctionAppSyncFunction148F70DDFunctionId": Object {
      "Type": "String",
    },
    "referencetotransformerrootstackPostNestedStackPostNestedStackResource45FCAC5EOutputstransformerrootstackPostQuerygetPostpostAuth0FunctionQuerygetPostpostAuth0FunctionAppSyncFunction052A79B2FunctionId": Object {
      "Type": "String",
    },
    "referencetotransformerrootstackPostNestedStackPostNestedStackResource45FCAC5EOutputstransformerrootstackPostSubscriptionOnCreatePostDataResolverFnSubscriptionOnCreatePostDataResolverFnAppSyncFunctionAE3ECF1FFunctionId": Object {
      "Type": "String",
    },
    "referencetotransformerrootstackS3DeploymentBucket7592718ARef": Object {
      "Type": "String",
    },
    "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref": Object {
      "Type": "String",
    },
    "referencetotransformerrootstackenv10C5A902Ref": Object {
      "Type": "String",
    },
  },
  "Resources": Object {
    "CommentDataSource": Object {
      "DependsOn": Array [
        "CommentIAMRoleD5EC5F51",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
        },
        "DynamoDBConfig": Object {
          "AwsRegion": Object {
            "Ref": "AWS::Region",
          },
          "TableName": Object {
            "Ref": "CommentTable",
          },
        },
        "Name": "CommentTable",
        "ServiceRoleArn": Object {
          "Fn::GetAtt": Array [
            "CommentIAMRoleD5EC5F51",
            "Arn",
          ],
        },
        "Type": "AMAZON_DYNAMODB",
      },
      "Type": "AWS::AppSync::DataSource",
    },
    "CommentIAMRoleD5EC5F51": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "appsync.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "RoleName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "CommentIAMRole20388d-",
              Object {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
              },
              "-",
              Object {
                "Ref": "referencetotransformerrootstackenv10C5A902Ref",
              },
            ],
          ],
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "CommentIAMRoleDefaultPolicyA8D6F6B5": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "CommentTable",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CommentIAMRoleDefaultPolicyA8D6F6B5",
        "Roles": Array [
          Object {
            "Ref": "CommentIAMRoleD5EC5F51",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CommentTable": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "id",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PROVISIONED",
        "KeySchema": Array [
          Object {
            "AttributeName": "id",
            "KeyType": "HASH",
          },
        ],
        "PointInTimeRecoverySpecification": Object {
          "Fn::If": Array [
            "ShouldUsePointInTimeRecovery",
            Object {
              "PointInTimeRecoveryEnabled": true,
            },
            Object {
              "Ref": "AWS::NoValue",
            },
          ],
        },
        "ProvisionedThroughput": Object {
          "Fn::If": Array [
            "ShouldUsePayPerRequestBilling",
            Object {
              "Ref": "AWS::NoValue",
            },
            Object {
              "ReadCapacityUnits": Object {
                "Ref": "DynamoDBModelTableReadIOPS",
              },
              "WriteCapacityUnits": Object {
                "Ref": "DynamoDBModelTableWriteIOPS",
              },
            },
          ],
        },
        "SSESpecification": Object {
          "SSEEnabled": Object {
            "Fn::If": Array [
              "ShouldUseServerSideEncryption",
              true,
              false,
            ],
          },
        },
        "StreamSpecification": Object {
          "StreamViewType": "NEW_AND_OLD_IMAGES",
        },
        "TableName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Comment-",
              Object {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
              },
              "-",
              Object {
                "Ref": "referencetotransformerrootstackenv10C5A902Ref",
              },
            ],
          ],
        },
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
    "CreateCommentResolver": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
        },
        "Code": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/**
 * Configure stash variables which will be used downstream in the linked functions.
 */
export function request(context) {
  Object.entries({
    typeName: 'Mutation',
    fieldName: 'createComment',
    conditions: [],
    metadata: {
      dataSourceType: 'AMAZON_DYNAMODB',
      apiId: '",
              Object {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
              },
              "',
    },
    tableName: '",
              Object {
                "Ref": "CommentTable",
              },
              "',
  }).forEach(([name, value]) => (context.stash[name] = value));
  return {};
}

/**
 * No-op response function.
 */
export function response(context) {
  return context.prev.result;
}
",
            ],
          ],
        },
        "FieldName": "createComment",
        "Kind": "PIPELINE",
        "PipelineConfig": Object {
          "Functions": Array [
            Object {
              "Ref": "referencetotransformerrootstackPostNestedStackPostNestedStackResource45FCAC5EOutputstransformerrootstackPostMutationcreatePostinit0FunctionMutationcreatePostinit0FunctionAppSyncFunctionB82DB57BFunctionId",
            },
            Object {
              "Ref": "referencetotransformerrootstackPostNestedStackPostNestedStackResource45FCAC5EOutputstransformerrootstackPostQuerygetPostpostAuth0FunctionQuerygetPostpostAuth0FunctionAppSyncFunction052A79B2FunctionId",
            },
            Object {
              "Fn::GetAtt": Array [
                "MutationCreateCommentDataResolverFnMutationCreateCommentDataResolverFnAppSyncFunctionD019FFE0",
                "FunctionId",
              ],
            },
          ],
        },
        "Runtime": Object {
          "Name": "APPSYNC_JS",
          "RuntimeVersion": "1.0.0",
        },
        "TypeName": "Mutation",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "DeleteCommentResolver": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
        },
        "Code": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/**
 * Configure stash variables which will be used downstream in the linked functions.
 */
export function request(context) {
  Object.entries({
    typeName: 'Mutation',
    fieldName: 'deleteComment',
    conditions: [],
    metadata: {
      dataSourceType: 'AMAZON_DYNAMODB',
      apiId: '",
              Object {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
              },
              "',
    },
    tableName: '",
              Object {
                "Ref": "CommentTable",
              },
              "',
  }).forEach(([name, value]) => (context.stash[name] = value));
  return {};
}

/**
 * No-op response function.
 */
export function response(context) {
  return context.prev.result;
}
",
            ],
          ],
        },
        "FieldName": "deleteComment",
        "Kind": "PIPELINE",
        "PipelineConfig": Object {
          "Functions": Array [
            Object {
              "Ref": "referencetotransformerrootstackPostNestedStackPostNestedStackResource45FCAC5EOutputstransformerrootstackPostQuerygetPostpostAuth0FunctionQuerygetPostpostAuth0FunctionAppSyncFunction052A79B2FunctionId",
            },
            Object {
              "Fn::GetAtt": Array [
                "MutationDeleteCommentDataResolverFnMutationDeleteCommentDataResolverFnAppSyncFunctionD661C8CB",
                "FunctionId",
              ],
            },
          ],
        },
        "Runtime": Object {
          "Name": "APPSYNC_JS",
          "RuntimeVersion": "1.0.0",
        },
        "TypeName": "Mutation",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "DynamoDBAccess71ABE5AE": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:DeleteItem",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:Query",
                "dynamodb:UpdateItem",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Sub": Array [
                    "arn:aws:dynamodb:\${AWS::Region}:\${AWS::AccountId}:table/\${tablename}",
                    Object {
                      "tablename": Object {
                        "Fn::Join": Array [
                          "",
                          Array [
                            "Comment-",
                            Object {
                              "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
                            },
                            "-",
                            Object {
                              "Ref": "referencetotransformerrootstackenv10C5A902Ref",
                            },
                          ],
                        ],
                      },
                    },
                  ],
                },
                Object {
                  "Fn::Sub": Array [
                    "arn:aws:dynamodb:\${AWS::Region}:\${AWS::AccountId}:table/\${tablename}/*",
                    Object {
                      "tablename": Object {
                        "Fn::Join": Array [
                          "",
                          Array [
                            "Comment-",
                            Object {
                              "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
                            },
                            "-",
                            Object {
                              "Ref": "referencetotransformerrootstackenv10C5A902Ref",
                            },
                          ],
                        ],
                      },
                    },
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DynamoDBAccess71ABE5AE",
        "Roles": Array [
          Object {
            "Ref": "CommentIAMRoleD5EC5F51",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GetCommentResolver": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
        },
        "Code": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/**
 * Configure stash variables which will be used downstream in the linked functions.
 */
export function request(context) {
  Object.entries({
    typeName: 'Query',
    fieldName: 'getComment',
    conditions: [],
    metadata: {
      dataSourceType: 'AMAZON_DYNAMODB',
      apiId: '",
              Object {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
              },
              "',
    },
    tableName: '",
              Object {
                "Ref": "CommentTable",
              },
              "',
  }).forEach(([name, value]) => (context.stash[name] = value));
  return {};
}

/**
 * No-op response function.
 */
export function response(context) {
  return context.prev.result;
}
",
            ],
          ],
        },
        "FieldName": "getComment",
        "Kind": "PIPELINE",
        "PipelineConfig": Object {
          "Functions": Array [
            Object {
              "Ref": "referencetotransformerrootstackPostNestedStackPostNestedStackResource45FCAC5EOutputstransformerrootstackPostQuerygetPostpostAuth0FunctionQuerygetPostpostAuth0FunctionAppSyncFunction052A79B2FunctionId",
            },
            Object {
              "Fn::GetAtt": Array [
                "QueryGetCommentDataResolverFnQueryGetCommentDataResolverFnAppSyncFunction8473E2B0",
                "FunctionId",
              ],
            },
          ],
        },
        "Runtime": Object {
          "Name": "APPSYNC_JS",
          "RuntimeVersion": "1.0.0",
        },
        "TypeName": "Query",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "ListCommentResolver": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
        },
        "Code": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/**
 * Configure stash variables which will be used downstream in the linked functions.
 */
export function request(context) {
  Object.entries({
    typeName: 'Query',
    fieldName: 'listComments',
    conditions: [],
    metadata: {
      dataSourceType: 'AMAZON_DYNAMODB',
      apiId: '",
              Object {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
              },
              "',
    },
    tableName: '",
              Object {
                "Ref": "CommentTable",
              },
              "',
  }).forEach(([name, value]) => (context.stash[name] = value));
  return {};
}

/**
 * No-op response function.
 */
export function response(context) {
  return context.prev.result;
}
",
            ],
          ],
        },
        "FieldName": "listComments",
        "Kind": "PIPELINE",
        "PipelineConfig": Object {
          "Functions": Array [
            Object {
              "Ref": "referencetotransformerrootstackPostNestedStackPostNestedStackResource45FCAC5EOutputstransformerrootstackPostQuerygetPostpostAuth0FunctionQuerygetPostpostAuth0FunctionAppSyncFunction052A79B2FunctionId",
            },
            Object {
              "Fn::GetAtt": Array [
                "QueryListCommentsDataResolverFnQueryListCommentsDataResolverFnAppSyncFunction474D4A91",
                "FunctionId",
              ],
            },
          ],
        },
        "Runtime": Object {
          "Name": "APPSYNC_JS",
          "RuntimeVersion": "1.0.0",
        },
        "TypeName": "Query",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "MutationCreateCommentDataResolverFnMutationCreateCommentDataResolverFnAppSyncFunctionD019FFE0": Object {
      "DependsOn": Array [
        "CommentDataSource",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
        },
        "DataSourceName": Object {
          "Fn::GetAtt": Array [
            "CommentDataSource",
            "Name",
          ],
        },
        "FunctionVersion": "2018-05-29",
        "Name": "MutationCreateCommentDataResolverFn",
        "RequestMappingTemplateS3Location": Object {
          "Fn::Join": Array [
            "",
            Array [
              "s3://",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef",
              },
              "/",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref",
              },
              "/resolvers/Mutation.createComment.req.vtl",
            ],
          ],
        },
        "ResponseMappingTemplateS3Location": Object {
          "Fn::Join": Array [
            "",
            Array [
              "s3://",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef",
              },
              "/",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref",
              },
              "/resolvers/Mutation.createComment.res.vtl",
            ],
          ],
        },
      },
      "Type": "AWS::AppSync::FunctionConfiguration",
    },
    "MutationDeleteCommentDataResolverFnMutationDeleteCommentDataResolverFnAppSyncFunctionD661C8CB": Object {
      "DependsOn": Array [
        "CommentDataSource",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
        },
        "DataSourceName": Object {
          "Fn::GetAtt": Array [
            "CommentDataSource",
            "Name",
          ],
        },
        "FunctionVersion": "2018-05-29",
        "Name": "MutationDeleteCommentDataResolverFn",
        "RequestMappingTemplateS3Location": Object {
          "Fn::Join": Array [
            "",
            Array [
              "s3://",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef",
              },
              "/",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref",
              },
              "/resolvers/Mutation.deleteComment.req.vtl",
            ],
          ],
        },
        "ResponseMappingTemplateS3Location": Object {
          "Fn::Join": Array [
            "",
            Array [
              "s3://",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef",
              },
              "/",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref",
              },
              "/resolvers/Mutation.deleteComment.res.vtl",
            ],
          ],
        },
      },
      "Type": "AWS::AppSync::FunctionConfiguration",
    },
    "MutationUpdateCommentDataResolverFnMutationUpdateCommentDataResolverFnAppSyncFunctionB47372B5": Object {
      "DependsOn": Array [
        "CommentDataSource",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
        },
        "DataSourceName": Object {
          "Fn::GetAtt": Array [
            "CommentDataSource",
            "Name",
          ],
        },
        "FunctionVersion": "2018-05-29",
        "Name": "MutationUpdateCommentDataResolverFn",
        "RequestMappingTemplateS3Location": Object {
          "Fn::Join": Array [
            "",
            Array [
              "s3://",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef",
              },
              "/",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref",
              },
              "/resolvers/Mutation.updateComment.req.vtl",
            ],
          ],
        },
        "ResponseMappingTemplateS3Location": Object {
          "Fn::Join": Array [
            "",
            Array [
              "s3://",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef",
              },
              "/",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref",
              },
              "/resolvers/Mutation.updateComment.res.vtl",
            ],
          ],
        },
      },
      "Type": "AWS::AppSync::FunctionConfiguration",
    },
    "QueryGetCommentDataResolverFnQueryGetCommentDataResolverFnAppSyncFunction8473E2B0": Object {
      "DependsOn": Array [
        "CommentDataSource",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
        },
        "DataSourceName": Object {
          "Fn::GetAtt": Array [
            "CommentDataSource",
            "Name",
          ],
        },
        "FunctionVersion": "2018-05-29",
        "Name": "QueryGetCommentDataResolverFn",
        "RequestMappingTemplateS3Location": Object {
          "Fn::Join": Array [
            "",
            Array [
              "s3://",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef",
              },
              "/",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref",
              },
              "/resolvers/Query.getComment.req.vtl",
            ],
          ],
        },
        "ResponseMappingTemplateS3Location": Object {
          "Fn::Join": Array [
            "",
            Array [
              "s3://",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef",
              },
              "/",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref",
              },
              "/resolvers/Query.getComment.res.vtl",
            ],
          ],
        },
      },
      "Type": "AWS::AppSync::FunctionConfiguration",
    },
    "QueryListCommentsDataResolverFnQueryListCommentsDataResolverFnAppSyncFunction474D4A91": Object {
      "DependsOn": Array [
        "CommentDataSource",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
        },
        "DataSourceName": Object {
          "Fn::GetAtt": Array [
            "CommentDataSource",
            "Name",
          ],
        },
        "FunctionVersion": "2018-05-29",
        "Name": "QueryListCommentsDataResolverFn",
        "RequestMappingTemplateS3Location": Object {
          "Fn::Join": Array [
            "",
            Array [
              "s3://",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef",
              },
              "/",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref",
              },
              "/resolvers/Query.listComments.req.vtl",
            ],
          ],
        },
        "ResponseMappingTemplateS3Location": Object {
          "Fn::Join": Array [
            "",
            Array [
              "s3://",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef",
              },
              "/",
              Object {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref",
              },
              "/resolvers/Query.listComments.res.vtl",
            ],
          ],
        },
      },
      "Type": "AWS::AppSync::FunctionConfiguration",
    },
    "SubscriptiononCreateCommentResolver": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
        },
        "Code": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/**
 * Configure stash variables which will be used downstream in the linked functions.
 */
export function request(context) {
  Object.entries({
    typeName: 'Subscription',
    fieldName: 'onCreateComment',
    conditions: [],
    metadata: { dataSourceType: 'NONE', apiId: '",
              Object {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
              },
              "' },
  }).forEach(([name, value]) => (context.stash[name] = value));
  return {};
}

/**
 * No-op response function.
 */
export function response(context) {
  return context.prev.result;
}
",
            ],
          ],
        },
        "FieldName": "onCreateComment",
        "Kind": "PIPELINE",
        "PipelineConfig": Object {
          "Functions": Array [
            Object {
              "Ref": "referencetotransformerrootstackPostNestedStackPostNestedStackResource45FCAC5EOutputstransformerrootstackPostQuerygetPostpostAuth0FunctionQuerygetPostpostAuth0FunctionAppSyncFunction052A79B2FunctionId",
            },
            Object {
              "Ref": "referencetotransformerrootstackPostNestedStackPostNestedStackResource45FCAC5EOutputstransformerrootstackPostSubscriptionOnCreatePostDataResolverFnSubscriptionOnCreatePostDataResolverFnAppSyncFunctionAE3ECF1FFunctionId",
            },
          ],
        },
        "Runtime": Object {
          "Name": "APPSYNC_JS",
          "RuntimeVersion": "1.0.0",
        },
        "TypeName": "Subscription",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "SubscriptiononDeleteCommentResolver": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
        },
        "Code": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/**
 * Configure stash variables which will be used downstream in the linked functions.
 */
export function request(context) {
  Object.entries({
    typeName: 'Subscription',
    fieldName: 'onDeleteComment',
    conditions: [],
    metadata: { dataSourceType: 'NONE', apiId: '",
              Object {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
              },
              "' },
  }).forEach(([name, value]) => (context.stash[name] = value));
  return {};
}

/**
 * No-op response function.
 */
export function response(context) {
  return context.prev.result;
}
",
            ],
          ],
        },
        "FieldName": "onDeleteComment",
        "Kind": "PIPELINE",
        "PipelineConfig": Object {
          "Functions": Array [
            Object {
              "Ref": "referencetotransformerrootstackPostNestedStackPostNestedStackResource45FCAC5EOutputstransformerrootstackPostQuerygetPostpostAuth0FunctionQuerygetPostpostAuth0FunctionAppSyncFunction052A79B2FunctionId",
            },
            Object {
              "Ref": "referencetotransformerrootstackPostNestedStackPostNestedStackResource45FCAC5EOutputstransformerrootstackPostSubscriptionOnCreatePostDataResolverFnSubscriptionOnCreatePostDataResolverFnAppSyncFunctionAE3ECF1FFunctionId",
            },
          ],
        },
        "Runtime": Object {
          "Name": "APPSYNC_JS",
          "RuntimeVersion": "1.0.0",
        },
        "TypeName": "Subscription",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "SubscriptiononUpdateCommentResolver": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
        },
        "Code": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/**
 * Configure stash variables which will be used downstream in the linked functions.
 */
export function request(context) {
  Object.entries({
    typeName: 'Subscription',
    fieldName: 'onUpdateComment',
    conditions: [],
    metadata: { dataSourceType: 'NONE', apiId: '",
              Object {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
              },
              "' },
  }).forEach(([name, value]) => (context.stash[name] = value));
  return {};
}

/**
 * No-op response function.
 */
export function response(context) {
  return context.prev.result;
}
",
            ],
          ],
        },
        "FieldName": "onUpdateComment",
        "Kind": "PIPELINE",
        "PipelineConfig": Object {
          "Functions": Array [
            Object {
              "Ref": "referencetotransformerrootstackPostNestedStackPostNestedStackResource45FCAC5EOutputstransformerrootstackPostQuerygetPostpostAuth0FunctionQuerygetPostpostAuth0FunctionAppSyncFunction052A79B2FunctionId",
            },
            Object {
              "Ref": "referencetotransformerrootstackPostNestedStackPostNestedStackResource45FCAC5EOutputstransformerrootstackPostSubscriptionOnCreatePostDataResolverFnSubscriptionOnCreatePostDataResolverFnAppSyncFunctionAE3ECF1FFunctionId",
            },
          ],
        },
        "Runtime": Object {
          "Name": "APPSYNC_JS",
          "RuntimeVersion": "1.0.0",
        },
        "TypeName": "Subscription",
      },
      "Type": "AWS::AppSync::Resolver",
    },
    "UpdateCommentResolver": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
        },
        "Code": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/**
 * Configure stash variables which will be used downstream in the linked functions.
 */
export function request(context) {
  Object.entries({
    typeName: 'Mutation',
    fieldName: 'updateComment',
    conditions: [],
    metadata: {
      dataSourceType: 'AMAZON_DYNAMODB',
      apiId: '",
              Object {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId",
              },
              "',
    },
    tableName: '",
              Object {
                "Ref": "CommentTable",
              },
              "',
  }).forEach(([name, value]) => (context.stash[name] = value));
  return {};
}

/**
 * No-op response function.
 */
export function response(context) {
  return context.prev.result;
}
",
            ],
          ],
        },
        "FieldName": "updateComment",
        "Kind": "PIPELINE",
        "PipelineConfig": Object {
          "Functions": Array [
            Object {
              "Ref": "referencetotransformerrootstackPostNestedStackPostNestedStackResource45FCAC5EOutputstransformerrootstackPostMutationupdatePostinit0FunctionMutationupdatePostinit0FunctionAppSyncFunction148F70DDFunctionId",
            },
            Object {
              "Ref": "referencetotransformerrootstackPostNestedStackPostNestedStackResource45FCAC5EOutputstransformerrootstackPostQuerygetPostpostAuth0FunctionQuerygetPostpostAuth0FunctionAppSyncFunction052A79B2FunctionId",
            },
            Object {
              "Fn::GetAtt": Array [
                "MutationUpdateCommentDataResolverFnMutationUpdateCommentDataResolverFnAppSyncFunctionB47372B5",
                "FunctionId",
              ],
            },
          ],
        },
        "Runtime": Object {
          "Name": "APPSYNC_JS",
          "RuntimeVersion": "1.0.0",
        },
        "TypeName": "Mutation",
      },
      "Type": "AWS::AppSync::Resolver",
    },
  },
}
`;
